#include <iostream>

namespace san {

class San {
    public:
        // H√†m t√≠nh t·ªïng t·∫£i tr·ªçng s√†n (kN/m2)
        double tong_tai_san() {
            int loaiCT;
            double l_bt = 25.0; // kN/m3 ‚Äì Tr·ªçng l∆∞·ª£ng ri√™ng b√™ t√¥ng
            double g1, g2 = 2.0, qsd;
            
            double h_san;
            std::cout << "Nh·∫≠p chi·ªÅu d√†y s√†n (m): ";
            std::cin >> h_san;

            g1 = l_bt * h_san; // T·∫£i tr·ªçng b·∫£n s√†n b√™ t√¥ng (kN/m2)

            std::cout << "\nCh·ªçn lo·∫°i c√¥ng tr√¨nh:\n";
            std::cout << "1. M√°i nh√† kh√¥ng c√≥ ng∆∞·ªùi l√™n (1.0 kN/m¬≤)\n";
            std::cout << "2. Nh√† ·ªü (2.0 kN/m¬≤)\n";
            std::cout << "3. VƒÉn ph√≤ng (3.0 kN/m¬≤)\n";
            std::cout << "4. H√†nh lang c√¥ng c·ªông (5.0 kN/m¬≤)\n";
            std::cout << "Nh·∫≠p l·ª±a ch·ªçn (1-4): ";
            std::cin >> loaiCT;

            switch (loaiCT) {
                case 1: qsd = 1.0; break;
                case 2: qsd = 2.0; break;
                case 3: qsd = 3.0; break;
                case 4: qsd = 5.0; break;
                default:
                    std::cout << "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. M·∫∑c ƒë·ªãnh ch·ªçn Nh√† ·ªü.\n";
                    qsd = 2.0;
            }

            double q = g1 + g2 + qsd;
            std::cout << "\n‚úÖ T·ªïng t·∫£i tr·ªçng tr√™n 1 m¬≤ s√†n (q): " << q << " kN/m¬≤\n";
            return q;
        }

        void tai_san_len_dam(double Lx, double Ly) {
            double q = tong_tai_san();

            double Q = q * Lx * Ly;                // T·ªïng t·∫£i to√†n s√†n (kN)
            double q_ngan = q * Lx / 2.0;          // T·∫£i l√™n m·ªói d·∫ßm ng·∫Øn (kN/m)
            double q_dai = q * Ly / 2.0;           // T·∫£i l√™n m·ªói d·∫ßm d√†i (kN/m)

            std::cout << "\nüî∏ T·ªïng t·∫£i tr·ªçng to√†n s√†n: Q = " << Q << " kN\n";
            std::cout << "üî∏ T·∫£i l√™n m·ªói m d·∫ßm NG·∫ÆN (q_ngan): " << q_ngan << " kN/m\n";
            std::cout << "üî∏ T·∫£i l√™n m·ªói m d·∫ßm D√ÄI  (q_dai):  " << q_dai << " kN/m\n";
        }
    };

} // namespace san

int main() {
    san::San s;
    double Lx, Ly;

    std::cout << "Nh·∫≠p chi·ªÅu d√†i √¥ s√†n Lx (m): ";
    std::cin >> Lx;
    std::cout << "Nh·∫≠p chi·ªÅu r·ªông √¥ s√†n Ly (m): ";
    std::cin >> Ly;

    s.tai_san_len_dam(Lx, Ly);

    return 0;
}
